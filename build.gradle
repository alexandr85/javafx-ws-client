buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.edu.sc.seis:macAppBundle:2.1.6"
        classpath "gradle.plugin.edu.sc.seis.gradle:launch4j:2.3.0"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.macAppBundle'
apply plugin: "edu.sc.seis.launch4j"

group = 'ru.testing'
version = '2.0'
description = """JavaFX application for testing websocket"""
def appFileName = 'WsClient'
def mainClass = 'ru.testing.client.MainApp'
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

dependencies {
    compile('org.glassfish.tyrus:tyrus-client:1.12')
    compile('org.glassfish.tyrus:tyrus-container-grizzly-client:1.12')
    compile('com.sun.jersey:jersey-client:1.19')
    compile('com.fasterxml.jackson.core:jackson-databind:2.7.0-rc3')
    compile('org.xerial:sqlite-jdbc:3.8.11.2')
    compile('org.slf4j:slf4j-log4j12:1.7.12')
    compile('com.yuvimasory:orange-extensions:1.3.0')
    compile('org.controlsfx:controlsfx:8.40.12')
    testCompile('junit:junit:4.12')
    testCompile('org.hamcrest:hamcrest-all:1.3')
}

// For tasks `createApp` or `createDmg`
macAppBundle {
    mainClassName = mainClass
    icon = 'src/main/resources/images/icon-512.icns'
    bundleJRE = false
    appName = appFileName
    dmgName = appFileName
}

// For task `createExe`
launch4j {
    mainClassName = mainClass
    icon = '../../application.ico'
    outfile = appFileName + '.exe'
    libraryDir = 'libs'
    outputDir = 'winApp'
}

// Create application for all os
task create(dependsOn: [clean, createExe, createApp, createDmg], type: Zip) {
    from "build/winApp"
    archiveName = "${appFileName}.zip"
}
