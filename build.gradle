plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'org.beryx.jlink' version '2.11.1'
}

repositories {
    mavenCentral()
}

ext {
    appName = "WsrInspector"
    appModuleName = "wsr.inspector"
    appMainClass = "ru.testing.client.FXApp"
    appLauncher = appModuleName
    appPackaging = appName
}

application {
    group = 'ru.testing'
    version = '3.0'
    description = """UI application for testing websocket & rest requests"""
    mainClassName = "${appModuleName}/${appMainClass}"
    compileJava.options.encoding = 'UTF-8'
    sourceCompatibility = 1.11
}

allprojects {
    idea {
        module {
            inheritOutputDirs = true
        }
    }
}

javafx {
    version = "12"
    modules = ['javafx.fxml', 'javafx.controls']
}

dependencies {
    compile 'org.glassfish.tyrus:tyrus-client:1.12'
    compile 'org.glassfish.tyrus:tyrus-container-grizzly-client:1.12'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'org.controlsfx:controlsfx:11.0.0'
    compile 'org.glassfish.tyrus.ext:tyrus-extension-deflate:1.13.1'
    compile 'log4j:log4j:1.2.17'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
}

jlink {
    imageZip.set(project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip"))
    addOptions('--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages')
    launcher {
        name = appLauncher
    }
}

task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'

test {
    reports.html.enabled = false
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
